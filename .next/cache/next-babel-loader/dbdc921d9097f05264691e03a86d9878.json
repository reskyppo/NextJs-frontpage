{"ast":null,"code":"var _jsxFileName = \"E:\\\\Reskyppo\\\\microweb\\\\frontend\\\\frontpage\\\\pages\\\\random\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\n\nfunction Todo({\n  data\n}) {\n  console.log(\"Todo -> data\", data);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }, \"Micro | Random\")), __jsx(\"main\", {\n    className: \"container mt-12 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-3xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, data.title)));\n}\n\nTodo.getInitialProps = async props => {\n  const {\n    id\n  } = props.query;\n\n  try {\n    const data = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`).then(response => response.json()).then(json => json);\n    return {\n      data\n    };\n  } catch (error) {}\n};\n\nexport default Todo;","map":{"version":3,"sources":["E:/Reskyppo/microweb/frontend/frontpage/pages/random/[id].js"],"names":["Head","Link","Todo","data","console","log","title","getInitialProps","props","id","query","fetch","then","response","json","error"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAsB;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,IAA5B;AACA,SACI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,EAKI;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,CAACG,KADV,CADJ,CALJ,CADJ;AAaH;;AAEDJ,IAAI,CAACK,eAAL,GAAuB,MAAOC,KAAP,IAAiB;AACpC,QAAM;AAACC,IAAAA;AAAD,MAAOD,KAAK,CAACE,KAAnB;;AAEA,MAAI;AACA,UAAMP,IAAI,GAAG,MAAMQ,KAAK,CAAE,8CAA6CF,EAAG,EAAlD,CAAL,CACdG,IADc,CACTC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADH,EAEdF,IAFc,CAETE,IAAI,IAAIA,IAFC,CAAnB;AAGI,WAAO;AAACX,MAAAA;AAAD,KAAP;AACP,GALD,CAKE,OAAOY,KAAP,EAAc,CAEf;AACJ,CAXD;;AAaA,eAAeb,IAAf","sourcesContent":["import Head from 'next/head'\r\nimport Link from 'next/link' \r\n\r\nfunction Todo({data}) {\r\n    console.log(\"Todo -> data\", data)\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>Micro | Random</title>\r\n            </Head>  \r\n\r\n            <main className=\"container mt-12 mx-auto\">\r\n                <h1 className=\"text-3xl\">\r\n                    {data.title}\r\n                </h1>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nTodo.getInitialProps = async (props) => {\r\n    const {id} = props.query\r\n\r\n    try {\r\n        const data = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n            .then(response => response.json())\r\n            .then(json => json)\r\n            return {data}\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}