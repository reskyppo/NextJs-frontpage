{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"E:\\\\Reskyppo\\\\microweb\\\\frontend\\\\frontpage\\\\pages\\\\random\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\n\nfunction Random(_ref) {\n  var _this = this;\n\n  var data = _ref.data;\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"Micro | Random\")), __jsx(\"main\", {\n    className: \"container mt-12 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-3xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Fecthing random words\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, data.map(function (todo) {\n    var _todo$title;\n\n    return __jsx(\"li\", {\n      key: todo.id,\n      className: \"border border-gray-600 p-4 my-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 32\n      }\n    }, (_todo$title = todo.title) !== null && _todo$title !== void 0 ? _todo$title : \"-\", __jsx(Link, {\n      href: \"/random/\".concat(todo.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 33\n      }\n    }, \"launch\")));\n  }))));\n}\n\n_c = Random;\nRandom.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch('https://jsonplaceholder.typicode.com/todos').then(function (response) {\n            return response.json();\n          }).then(function (json) {\n            return json;\n          });\n\n        case 3:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 7]]);\n}));\nexport default Random;\n\nvar _c;\n\n$RefreshReg$(_c, \"Random\");","map":{"version":3,"sources":["E:/Reskyppo/microweb/frontend/frontpage/pages/random/index.js"],"names":["Head","Link","Random","data","map","todo","id","title","getInitialProps","fetch","then","response","json"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,MAAT,OAAwB;AAAA;;AAAA,MAAPC,IAAO,QAAPA,IAAO;AAEpB,SACI,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAKE;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,IAAI,CAACC,GAAL,CAAS,UAAAC,IAAI,EAAI;AAAA;;AACb,WAAO;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,MAAA,SAAS,EAAC,iCAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACFD,IAAI,CAACE,KADH,qDACY,GADZ,EAEH,MAAC,IAAD;AAAM,MAAA,IAAI,oBAAaF,IAAI,CAACC,EAAlB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAFG,CAAP;AAMH,GAPD,CAFR,CAJF,CALF,CADJ;AA0BH;;KA5BQJ,M;AA8BTA,MAAM,CAACM,eAAP,yEAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEEC,KAAK,CAAC,4CAAD,CAAL,CACdC,IADc,CACT,UAAAC,QAAQ;AAAA,mBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,WADC,EAEdF,IAFc,CAET,UAAAE,IAAI;AAAA,mBAAIA,IAAJ;AAAA,WAFK,CAFF;;AAAA;AAEXT,UAAAA,IAFW;AAAA,2CAKN;AAACA,YAAAA,IAAI,EAAJA;AAAD,WALM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AAWA,eAAeD,MAAf","sourcesContent":["import Head from 'next/head'\r\nimport Link from 'next/link'    \r\n\r\nfunction Random({data}) {\r\n\r\n    return (\r\n        <>\r\n          <Head>\r\n            <title>Micro | Random</title>\r\n          </Head>  \r\n\r\n          <main className=\"container mt-12 mx-auto\">\r\n            <h1 className=\"text-3xl\">\r\n                Fecthing random words\r\n            </h1>\r\n            <ul>\r\n                {\r\n                    data.map(todo => {\r\n                        return <li key={todo.id} className='border border-gray-600 p-4 my-1'>\r\n                            {todo.title ?? \"-\"} \r\n                            <Link href={`/random/${todo.id}`} >\r\n                                <a >launch</a>\r\n                            </Link> \r\n                        </li>\r\n                    })\r\n                }\r\n            </ul>\r\n\r\n          </main>\r\n        </>\r\n    )\r\n}\r\n\r\nRandom.getInitialProps = async () => {\r\n    try {\r\n        const data = await fetch('https://jsonplaceholder.typicode.com/todos')\r\n            .then(response => response.json())\r\n            .then(json => json)\r\n            return {data}\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport default Random"]},"metadata":{},"sourceType":"module"}