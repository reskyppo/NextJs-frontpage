{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"E:\\\\Reskyppo\\\\microweb\\\\frontend\\\\frontpage\\\\pages\\\\random\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\n\nfunction Todo(_ref) {\n  var data = _ref.data;\n  console.log(\"Todo -> data\", data);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }, data.title)), __jsx(\"main\", {\n    className: \"container mt-12 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-3xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, data.title)));\n}\n\n_c = Todo;\n\nTodo.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var id, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = props.query.id;\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(\"https://jsonplaceholder.typicode.com/todos/\".concat(id)).then(function (response) {\n              return response.json();\n            }).then(function (json) {\n              return json;\n            });\n\n          case 4:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["E:/Reskyppo/microweb/frontend/frontpage/pages/random/[id].js"],"names":["Head","Link","Todo","data","console","log","title","getInitialProps","props","id","query","fetch","then","response","json"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,IAAT,OAAsB;AAAA,MAAPC,IAAO,QAAPA,IAAO;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,IAA5B;AACA,SACI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,IAAI,CAACG,KAAb,CADJ,CADJ,EAKI;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,IAAI,CAACG,KADV,CADJ,CALJ,CADJ;AAcH;;KAhBQJ,I;;AAkBTA,IAAI,CAACK,eAAL;AAAA,uEAAuB,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,YAAAA,EADY,GACND,KAAK,CAACE,KADA,CACZD,EADY;AAAA;AAAA;AAAA,mBAIIE,KAAK,sDAA+CF,EAA/C,EAAL,CACdG,IADc,CACT,UAAAC,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,aADC,EAEdF,IAFc,CAET,UAAAE,IAAI;AAAA,qBAAIA,IAAJ;AAAA,aAFK,CAJJ;;AAAA;AAITX,YAAAA,IAJS;AAAA,6CAOJ;AAACA,cAAAA,IAAI,EAAJA;AAAD,aAPI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAaA,eAAeD,IAAf","sourcesContent":["import Head from 'next/head'\r\nimport Link from 'next/link' \r\n\r\nfunction Todo({data}) {\r\n    console.log(\"Todo -> data\", data)\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>{data.title}</title>\r\n            </Head>  \r\n\r\n            <main className=\"container mt-12 mx-auto\">\r\n                <h1 className=\"text-3xl\">\r\n                    {data.title}\r\n                </h1>\r\n\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nTodo.getInitialProps = async (props) => {\r\n    const {id} = props.query\r\n\r\n    try {\r\n        const data = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n            .then(response => response.json())\r\n            .then(json => json)\r\n            return {data}\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}